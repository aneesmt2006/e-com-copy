<%- include("../../views/partials/admin/header") %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Customer Orders</title>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .animate-scale {
            transition: transform 0.3s ease-in-out;
        }
        .animate-scale:hover {
            transform: scale(1.05);
        }
        .popup {
            position: fixed;
            top: 16px;
            left: 50%;
            transform: translateX(-50%) scale(0.95);
            color: #ffffff;
            padding: 6px 12px;
            border-radius: 9999px;
            font-size: 14px;
            font-weight: 400;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s ease, transform 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            max-width: 90%;
            width: auto;
            white-space: nowrap;
        }
        .popup.show {
            opacity: 1;
            transform: translateX(-50%) scale(1);
            z-index: 1000;
        }
        .popup.success {
            background-color: #049b06f3;
            z-index: 1000;
        }
        .popup.error {
            background-color: #000000;
            z-index: 1000;
        }
        .popup.success:hover {
            background-color: #059669;
        }
        .popup.error:hover {
            background-color: #DC2626;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <div id="successPopup" class="popup success">
        <div class="icon-wrapper">
            <svg class="icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
        Success! Action recorded
      </div>
      
      <div id="errorPopup" class="popup error">
        <div class="icon-wrapper">
            <svg class="icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
        Error! Action failed
      </div> 
      <!--....................................POP UP MESSSAGE ............................................................. -->
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl md:text-4xl font-bold text-indigo-800 mb-8 text-center animate-fade-in">Customer Orders</h1>
        
        <div class="bg-white rounded-xl shadow-lg p-4 md:p-6 mb-8 animate-fade-in">
            <div class="flex flex-col md:flex-row md:items-center md:space-x-4 space-y-4 md:space-y-0 mb-4">
                <input type="text" placeholder="Search orders..." class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                <select class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                    <option value="">All Statuses</option>
                    <option value="pending">Pending</option>
                    <option value="processing">Processing</option>
                    <option value="shipped">Shipped</option>
                    <option value="delivered">Delivered</option>
                    <option value="cancelled">Cancelled</option>
                </select>
                <select class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                    <option value="">Sort by</option>
                    <option value="date-desc">Date: Newest First</option>
                    <option value="date-asc">Date: Oldest First</option>
                    <option value="total-desc">Total: High to Low</option>
                    <option value="total-asc">Total: Low to High</option>
                </select>
            </div>
        </div>
        
        <div class="bg-white rounded-xl shadow-lg overflow-hidden animate-fade-in">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="bg-indigo-100 text-indigo-800 uppercase text-xs md:text-sm leading-normal">
                            <th class="py-3 px-4 md:px-6 text-left">Order ID</th>
                            <th class="py-3 px-4 md:px-6 text-left">Customer</th>
                            <th class="py-3 px-4 md:px-6 text-center">Date</th>
                            <th class="py-3 px-4 md:px-6 text-center">Total</th>
                            <th class="py-3 px-4 md:px-6 text-center">Status</th>
                            <th class="py-3 px-4 md:px-6 text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="text-gray-600 text-sm font-light">
                        <% if (orders && orders.length > 0) { %>
                            <% orders.forEach(order => { %>
                                <tr class="border-b border-gray-200 hover:bg-indigo-50 transition duration-300">
                                    <td class="py-3 px-4 md:px-6 text-left whitespace-nowrap">
                                        <span class="font-medium">#<%= order._id %></span>
                                    </td>
                                    <td class="py-3 px-4 md:px-6 text-left">
                                        <span><%= order.address.name %></span>
                                    </td>
                                    <td class="py-3 px-4 md:px-6 text-center">
                                        <span><%= new Date(order.createdOn).toDateString()%></span>
                                    </td>
                                    <td class="py-3 px-4 md:px-6 text-center">
                                        <span class="font-bold">$<%= order.finalAmount.toFixed(2) %></span>
                                    </td>
                                    <td class="py-3 px-4 md:px-6 text-center">
                                        <select 
                                            onchange="updateOrderStatus('<%= order._id %>', this.value)" 
                                            class="bg-transparent border-none text-sm font-semibold focus:outline-none focus:ring-2 focus:ring-indigo-500 rounded"
                                        >
                                            <% const statusHierarchy = ["Placed", "Shipped", "Delivered", "Cancelled"]; %>
                                            <% const currentIndex = statusHierarchy.indexOf(order.status); %>
                                    
                                            <% statusHierarchy.forEach((status, index) => { %>
                                                <% if (index >= currentIndex) { %>
                                                    <option 
                                                        value="<%= status %>" 
                                                        <%= order.status === status ? 'selected' : '' %>
                                                    >
                                                        <%= status %>
                                                    </option>
                                                <% } %>
                                            <% }); %>
                                        </select>
                                    </td>
                                    <td class="py-3 px-4 md:px-6 text-center">
                                        <div class="flex items-center justify-center">
                                            <button class="w-8 h-8 rounded-full bg-blue-500 text-white hover:bg-blue-600 transition duration-300 ease-in-out transform hover:scale-110 focus:outline-none view-order" onclick="openModal('<%= order._id %>')" title="View Details">
                                                <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-4 h-4 mx-auto">
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z" />
                                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z" />
                                                </svg>
                                            </button>
                                        </div>
                                    </td>
                                </tr>
                            <% }); %>
                        <% } else { %>
                            <tr>
                                <td colspan="6" class="text-center py-4">No orders found</td>
                            </tr>
                        <% } %>
                    </tbody>
                </table>
            </div>
        </div>

        <!-- Pagination -->
        <div class="flex items-center justify-center mt-4">
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                <a href="#" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Previous</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                    </svg>
                </a>
                <% if (pagination.totalPages > 1) { %>
                    <% for (let i = 1; i <= pagination.totalPages; i++) { %>
                        <a href="/admin/getOrders?page=<%= i %>" 
                           aria-current="<%= pagination.currentPage === i ? 'page' : '' %>" 
                           class="<%= pagination.currentPage === i ? 'relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600' : 'relative z-10 inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 hover:bg-gray-200' %>">
                            <%= i %>
                        </a>
                    <% } %>
                <% } %>
                <span class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300 focus:outline-offset-0">...</span>
                <a href="#" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Next</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                    </svg>
                </a>
            </nav>
        </div>
    </div>
    <!-- Modal -->
    <div id="orderModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden" style="padding-left: 315px;">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-2/3 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-2" id="modalTitle">Order Details</h3>
                <div class="mt-2 px-7 py-3">
                    <div id="modalContent" class="text-sm text-gray-500">
                        <!-- Order details will be populated here -->
                    </div>
                </div>
                <div class="items-center px-4 py-3">
                    <button id="closeModal" class="px-4 py-2 bg-indigo-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-300">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>
    <script>
        // Function to open the modal
        function openModal(orderId) {
        const modal = document.getElementById('orderModal');
        const modalTitle = document.getElementById('modalTitle');
        const modalContent = document.getElementById('modalContent');

        // Find the order details from EJS data
        const orderDetails = <%- JSON.stringify(orders) %>.find(order => order._id === orderId);

        // if (!orderDetails) {
        //     alert('Order not found!');
        //     return;
        // }

        modalTitle.textContent = `Order Details - #${orderDetails._id}`;
        modalContent.innerHTML = `
            <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-left">
                <div>
                    <p class="font-semibold">Order Information</p>
                    <p><strong>Order ID:</strong> ${orderDetails._id}</p>
                    <p><strong>User ID:</strong> ${orderDetails.userId._id}</p>
                    <p><strong>Status:</strong> ${orderDetails.status}</p>
                    <p><strong>Created On:</strong> ${orderDetails.createdOn}</p>
                    <p><strong>Invoice Date:</strong> ${orderDetails.invoiceDate}</p>
                </div>
                <div>
                    <p class="font-semibold">Payment Details</p>
                    <p><strong>Total Price:</strong> $${orderDetails.totalPrice.toFixed(2)}</p>
                    <p><strong>Discount:</strong> $${orderDetails.discount.toFixed(2)}</p>
                    <p><strong>Final Amount:</strong> $${orderDetails.finalAmount.toFixed(2)}</p>
                    <p><strong>Payment Method:</strong> ${orderDetails.paymentMethod}</p>
                    <p><strong>Coupon Applied:</strong> ${orderDetails.couponApplied ? 'Yes' : 'No'}</p>
                </div>
            </div>
            <div class="mt-4">
                <p class="font-semibold">Shipping Address</p>
                <p>${orderDetails.address.name}</p>
                <p>${orderDetails.address.streetAddress}</p>
                <p>${orderDetails.address.city}, ${orderDetails.address.state} ${orderDetails.address.pincode}</p>
                <p>Phone: ${orderDetails.address.phone}</p>
                ${orderDetails.address.altPhone ? `<p>Alt. Phone: ${orderDetails.address.altPhone}</p>` : ''}
            </div>
            <div class="mt-4">
                <p class="font-semibold">Ordered Items</p>
                <table class="w-full mt-2">
                    <thead>
                        <tr>
                            <th class="text-left">Product</th>
                            <th class="text-left">Quantity</th>
                            <th class="text-left">Price</th>
                        </tr>
                    </thead>
                    <tbody>
                        ${orderDetails.orderedItems.map(item => `
                            <tr>
                                <td>${item.product.productName}</td>
                                <td>${item.quantity}</td>
                                <td>$${item.price.toFixed(2)}</td>
                            </tr>
                        `).join('')}
                    </tbody>
                </table>
            </div>
        `;

        modal.classList.remove('hidden');
    }
        // Function to close the modal
        function closeModal() {
            const modal = document.getElementById('orderModal');
            modal.classList.add('hidden');
        }

        // Event listener for closing the modal
        document.getElementById('closeModal').addEventListener('click', closeModal);

        // Event delegation for opening the modal
        document.addEventListener('click', function(e) {
            if (e.target && e.target.classList.contains('view-order')) {
                const orderId = e.target.getAttribute('data-order-id');
                openModal(orderId);
            }
        });

        // Function to update order status
        async function updateOrderStatus(orderId, newStatus) {
            console.log(`Updating order ${orderId} to status: ${newStatus}`);

                  try {
                    response = await axios.patch(`/admin/orderUpdate/${orderId}`,{status:newStatus})
                    console.log(response.data.message)
                    showSuccessPopup("status updated successfully")
                    window.location.reload()
                  } catch (error) {
                    showErrorPopup(error)
                  }




        }

         // ...........................................POP UP................................................

  function showSuccessPopup(message) {
    const successPopup = document.getElementById('successPopup');
    successPopup.innerText = message;
    successPopup.classList.add('show');
    setTimeout(() => {
        successPopup.classList.remove('show');
    }, 3000); // Display for 3 seconds
}

// Display error popup with a custom message
function showErrorPopup(message) {
    const errorPopup = document.getElementById('errorPopup');
    errorPopup.innerText = message;
    errorPopup.classList.add('show');
    setTimeout(() => {
        errorPopup.classList.remove('show');
    }, 3000); // Display for 3 seconds
}

// ..............................................POP UP....................................................


         // Here you would typically send an API request to update the status
        //  console.log(`Updating order ${orderId} status to ${newStatus}`);
        //     // For this example, we'll just update the UI
        //     console.log("status gping to change ")
        //     const statusElement = document.querySelector(`[data-status-id="${orderId}"]`);
        //     if (statusElement) {
        //         statusElement.textContent = newStatus;
        //         statusElement.className = `py-1 px-3 rounded-full text-xs ${getStatusClass(newStatus)}`;
        //     }

        // Helper function to get status class
        function getStatusClass(status) {
            switch(status.toLowerCase()) {
                case 'pending': return 'bg-yellow-200 text-yellow-600';
                case 'processing': return 'bg-blue-200 text-blue-600';
                case 'shipped': return 'bg-purple-200 text-purple-600';
                case 'delivered': return 'bg-green-200 text-green-600';
                case 'cancelled': return 'bg-red-200 text-red-600';
                default: return 'bg-gray-200 text-gray-600';
            }
        }
    </script>
<%- include("../../views/partials/admin/footer") %>