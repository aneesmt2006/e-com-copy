<%- include("../../views/partials/admin/header") %>

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Return Requests</title>
    <link href="https://cdn.jsdelivr.net/npm/tailwindcss@2.2.19/dist/tailwind.min.css" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .animate-scale {
            transition: transform 0.3s ease-in-out;
        }
        .animate-scale:hover {
            transform: scale(1.05);
        }
        .popup {
            position: fixed;
            top: 16px;
            left: 50%;
            transform: translateX(-50%) scale(0.95);
            color: #ffffff;
            padding: 6px 12px;
            border-radius: 9999px;
            font-size: 14px;
            font-weight: 400;
            cursor: pointer;
            opacity: 0;
            transition: opacity 0.3s ease, transform 0.3s ease;
            display: flex;
            align-items: center;
            gap: 8px;
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
            max-width: 90%;
            width: auto;
            white-space: nowrap;
        }
        .popup.show {
            opacity: 1;
            transform: translateX(-50%) scale(1);
            z-index: 1000;
        }
        .popup.success {
            background-color: #049b06f3;
            z-index: 1000;
        }
        .popup.error {
            background-color: #000000;
            z-index: 1000;
        }
        .popup.success:hover {
            background-color: #059669;
        }
        .popup.error:hover {
            background-color: #DC2626;
        }
    </style>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <div id="successPopup" class="popup success">
        <div class="icon-wrapper">
            <svg class="icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M20 6L9 17L4 12" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
        Success! Action recorded
    </div>
      
    <div id="errorPopup" class="popup error">
        <div class="icon-wrapper">
            <svg class="icon" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M18 6L6 18M6 6L18 18" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
        </div>
        Error! Action failed
    </div>

    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl md:text-4xl font-bold text-indigo-800 mb-8 text-center animate-fade-in">Pending Return Requests</h1>
        
        <div class="bg-white rounded-xl shadow-lg p-4 md:p-6 mb-8 animate-fade-in">
            <div class="flex flex-col md:flex-row md:items-center md:space-x-4 space-y-4 md:space-y-0 mb-4">
                <input type="text" id="searchInput" placeholder="Search requests..." class="w-full md:w-1/2 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                <select id="statusFilter" class="w-full md:w-1/2 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                    <option value="">All Statuses</option>
                    <option value="Pending">Pending</option>
                    <option value="Approved">Approved</option>
                    <option value="Rejected">Rejected</option>
                </select>
            </div>
        </div>
        
        <div class="bg-white rounded-xl shadow-lg overflow-hidden animate-fade-in">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="bg-indigo-100 text-indigo-800 uppercase text-xs md:text-sm leading-normal">
                            <th class="py-3 px-4 md:px-6 text-left">Order ID</th>
                            <th class="py-3 px-4 md:px-6 text-left">Customer</th>
                            <th class="py-3 px-4 md:px-6 text-center">Date Requested</th>
                            <th class="py-3 px-4 md:px-6 text-center">Reason</th>
                            <th class="py-3 px-4 md:px-6 text-center">Status</th>
                            <th class="py-3 px-4 md:px-6 text-center">Actions</th>
                        </tr>
                    </thead>
                    <tbody class="text-gray-600 text-sm font-light">
                        <% if (returnRequests && returnRequests.length > 0) { %>
                          <% returnRequests.forEach(request => { %>
                            <tr class="border-b border-gray-200 hover:bg-indigo-50 transition duration-300" data-request-id="<%= request._id %>" data-order-id="<%= request.orderId %>">
                              <td class="py-3 px-4 md:px-6 text-left whitespace-nowrap">
                                <span class="font-medium">#<%= request.orderId.substring(0, 5) %></span>
                              </td>
                              <td class="py-3 px-4 md:px-6 text-left">
                                <span><%= request.userId.name %></span>
                              </td>
                              <td class="py-3 px-4 md:px-6 text-center">
                                <span><%= new Date(request.returnRequest.createdAt).toLocaleDateString() %></span>
                              </td>
                              <td class="py-3 px-4 md:px-6 text-center">
                                <span><%= request.returnRequest.reason %></span>
                              </td>
                              <td class="py-3 px-4 md:px-6 text-center status-cell">
                                <span class="px-2 py-1 rounded-full text-xs
                                  <%= request.returnRequest.status === 'Pending' ? 'bg-yellow-200 text-yellow-800' : 
                                     request.returnRequest.status === 'Approved' ? 'bg-green-200 text-green-800' :
                                     'bg-red-200 text-red-800' %>">
                                  <%= request.returnRequest.status %>
                                </span>
                              </td>
                              <td class="py-3 px-4 md:px-6 text-center actions-cell">
                                <div class="flex items-center justify-center space-x-2">
                                    <% if (request.returnRequest.status === 'Pending' || request.returnRequest.status === 'Rejected') { %>
                                        <button class="approve-button w-8 h-8 rounded-full bg-green-500 text-white hover:bg-green-600 transition duration-300 ease-in-out transform hover:scale-110 focus:outline-none" title="Approve">
                                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-4 h-4 mx-auto">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                                          </svg>
                                        </button>
                                      <% } %>
                                      <% if (request.returnRequest.status === 'Pending' || request.returnRequest.status === 'Approved') { %>
                                        <button class="reject-button w-8 h-8 rounded-full bg-red-500 text-white hover:bg-red-600 transition duration-300 ease-in-out transform hover:scale-110 focus:outline-none" title="Reject">
                                          <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-4 h-4 mx-auto">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
                                          </svg>
                                        </button>
                                      <% } %>
                                </div>
                              </td>
                            </tr>
                          <% }); %>
                        <% } else { %>
                          <tr>
                            <td colspan="6" class="text-center py-4">No pending return requests found</td>
                          </tr>
                        <% } %>
                      </tbody>
                </table>
            </div>
        </div>
        <!-- Success Popup -->
<div id="successPopup" class="popup success">
    Success! Action completed
</div>

<!-- Error Popup -->
<div id="errorPopup" class="popup error">
    Error! Action failed
</div>

        <!-- Pagination -->
        <div class="flex items-center justify-center mt-4">
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                <a href="#" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Previous</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                    </svg>
                </a>
                <% for (let i = 1; i <= totalPages; i++) { %>
                    <a href="/admin/return-requests?page=<%= i %>" 
                       aria-current="<%= currentPage === i ? 'page' : undefined %>" 
                       class="<%= currentPage === i ? 'relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600' : 'relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0' %>">
                        <%= i %>
                    </a>
                <% } %>
                <a href="#" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Next</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                    </svg>
                </a>
            </nav>
        </div>
    </div>

    <!-- Modal -->
    <div id="detailsModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full hidden">
        <div class="relative top-20 mx-auto p-5 border w-11/12 md:w-3/4 lg:w-2/3 shadow-lg rounded-md bg-white">
            <div class="mt-3">
                <h3 class="text-lg leading-6 font-medium text-gray-900 mb-2" id="modalTitle">Return Request Details</h3>
                <div class="mt-2 px-7 py-3">
                    <div id="modalContent" class="text-sm text-gray-500">
                        <!-- Return request details will be populated here -->
                    </div>
                </div>
                <div class="items-center px-4 py-3">
                    <button id="closeModal" class="px-4 py-2 bg-indigo-500 text-white text-base font-medium rounded-md w-full shadow-sm hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-indigo-300">
                        Close
                    </button>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>

        // Function to handle accepting or rejecting a return request
        function handleReturnRequest(orderId, action) {
    const status = action === 'approve' ? 'Approved' : 'Rejected';
    
    axios.post('/admin/update-return-request', { orderId, status })
        .then(response => {
            if (response.data.success) {
                showPopup('success', `Return request ${status.toLowerCase()} successfully`);
                updateUIAfterAction(orderId, status);
            } else {
                showPopup('error', response.data.message || 'Failed to update return request');
            }
        })
        .catch(error => {
            console.error('Error updating return request:', error);
            showPopup('error', 'An error occurred while updating the return request');
        });
}

function updateUIAfterAction(orderId, status) {
    const row = document.querySelector(`tr[data-order-id="${orderId}"]`);
    if (row) {
        const statusCell = row.querySelector('.status-cell');
        const actionsCell = row.querySelector('.actions-cell');

        // Update status cell
        statusCell.innerHTML = `
            <span class="px-2 py-1 rounded-full text-xs ${
                status === 'Approved' ? 'bg-green-200 text-green-800' : 'bg-red-200 text-red-800'
            }">
                ${status}
            </span>
        `;

        // Update action buttons
        updateActionButtons(actionsCell, status);
    }
}

function updateActionButtons(actionsCell, currentStatus) {
    const approveButton = `
        <button class="approve-button w-8 h-8 rounded-full bg-green-500 text-white hover:bg-green-600 transition duration-300 ease-in-out transform hover:scale-110 focus:outline-none" title="Approve">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-4 h-4 mx-auto">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
            </svg>
        </button>
    `;
    const rejectButton = `
        <button class="reject-button w-8 h-8 rounded-full bg-red-500 text-white hover:bg-red-600 transition duration-300 ease-in-out transform hover:scale-110 focus:outline-none" title="Reject">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor" class="w-4 h-4 mx-auto">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12" />
            </svg>
        </button>
    `;

    if (currentStatus === 'Approved') {
        actionsCell.innerHTML = `<div class="flex items-center justify-center space-x-2">${rejectButton}</div>`;
    } else if (currentStatus === 'Rejected') {
        actionsCell.innerHTML = `<div class="flex items-center justify-center space-x-2">${approveButton}</div>`;
    } else {
        actionsCell.innerHTML = `<div class="flex items-center justify-center space-x-2">${approveButton}${rejectButton}</div>`;
    }

    // Re-attach event listeners
    attachButtonListeners(actionsCell);
}

function attachButtonListeners(actionsCell) {
    const approveButton = actionsCell.querySelector('.approve-button');
    const rejectButton = actionsCell.querySelector('.reject-button');

    if (approveButton) {
        approveButton.addEventListener('click', (e) => {
            const orderId = e.target.closest('tr').dataset.orderId;
            handleReturnRequest(orderId, 'approve');
        });
    }

    if (rejectButton) {
        rejectButton.addEventListener('click', (e) => {
            const orderId = e.target.closest('tr').dataset.orderId;
            handleReturnRequest(orderId, 'reject');
        });
    }
}

function showPopup(type, message) {
    const popup = document.getElementById(`${type}Popup`);
    popup.textContent = message;
    popup.classList.add('show');
    setTimeout(() => popup.classList.remove('show'), 3000);
}

document.addEventListener('DOMContentLoaded', () => {
    const actionsCells = document.querySelectorAll('.actions-cell');
    actionsCells.forEach(cell => attachButtonListeners(cell));

    // Close modal button
    document.getElementById('closeModal').addEventListener('click', () => {
        document.getElementById('orderDetailsModal').classList.add('hidden');
    });
});
        // function approveRequest(requestId) {
        //     updateRequestStatus(requestId, 'Approved');
        // }

        // function rejectRequest(requestId) {
        //     updateRequestStatus(requestId, 'Rejected');
        // }

        // function updateRequestStatus(requestId, status) {
        //     axios.post('/admin/update-return-request', { requestId, status })
        //         .then(response => {
        //             if (response.data.success) {
        //                 showPopup('success', `Request ${status.toLowerCase()} successfully`);
        //                 setTimeout(() => location.reload(), 1000);
        //             } else {
        //                 showPopup('error', 'Failed to update request status');
        //             }
        //         })
        //         .catch(error => {
        //             console.error('Error updating request status:', error);
        //             showPopup('error', 'An error occurred while updating the request');
        //         });
        // }

        // function viewDetails(requestId) {
        //     axios.get(`/admin/return-request-details/${requestId}`)
        //         .then(response => {
        //             const request = response.data;
        //             const modalContent = document.getElementById('modalContent');
        //             modalContent.innerHTML = `
        //                 <p><strong>Order ID:</strong> ${request.orderId}</p>
        //                 <p><strong>Customer:</strong> ${request.customerName}</p>
        //                 <p><strong>Date Requested:</strong> ${new Date(request.createdAt).toLocaleString()}</p>
        //                 <p><strong>Reason:</strong> ${request.reason}</p>
        //                 <p><strong>Comment:</strong> ${request.comment || 'N/A'}</p>
        //                 <p><strong>Status:</strong> ${request.status}</p>
        //             `;
        //             document.getElementById('detailsModal').classList.remove('hidden');
        //         })
        //         .catch(error => {
        //             console.error('Error fetching request details:', error);
        //             showPopup('error', 'Failed to load request details');
        //         });
        // }

        // document.getElementById('closeModal').addEventListener('click', () => {
        //     document.getElementById('detailsModal').classList.add('hidden');
        // });

        // function showPopup(type, message) {
        //     const popup = document.getElementById(`${type}Popup`);
        //     popup.textContent = message;
        //     popup.classList.add('show');
        //     setTimeout(() => popup.classList.remove('show'), 3000);
        // }

        // // Search and filter functionality
        // document.getElementById('searchInput').addEventListener('input', filterRequests);
        // document.getElementById('statusFilter').addEventListener('change', filterRequests);

        // function filterRequests() {
        //     const searchValue = document.getElementById('searchInput').value.toLowerCase();
        //     const statusFilter = document.getElementById('statusFilter').value;
        //     const rows = document.querySelectorAll('tbody tr');

        //     rows.forEach(row => {
        //         const orderId = row.querySelector('td:first-child').textContent.toLowerCase();
        //         const customer = row.querySelector('td:nth-child(2)').textContent.toLowerCase();
        //         const status = row.querySelector('td:nth-child(5)').textContent.trim();
                
        //         const matchesSearch = orderId.includes(searchValue) || customer.includes(searchValue);
        //         const matchesStatus = statusFilter === '' || status === statusFilter;

        //         row.style.display = matchesSearch && matchesStatus ? '' : 'none';
        //     });
        // }
    </script>
</body>
</html>

<%- include("../../views/partials/admin/footer") %>