
<%- include("../../views/partials/admin/header") %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Sales Report</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>



    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .animate-scale {
            transition: transform 0.3s ease-in-out;
        }
        .animate-scale:hover {
            transform: scale(1.05);
        }

        #salesChart {
    display: block;
    width: 100%;
    max-width: 600px;
    height: auto;
    margin: 0 auto;
}

    </style>
</head>
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-3xl md:text-4xl font-bold text-indigo-800 mb-8 text-center animate-fade-in">Sales Report</h1>
        
        <div class="bg-white rounded-xl shadow-lg p-4 md:p-6 mb-8 animate-fade-in">
            <div class="flex flex-col md:flex-row md:items-center md:space-x-4 space-y-4 md:space-y-0 mb-4">
                <button class="report-tab active w-full md:w-auto px-6 py-2 rounded-full text-sm font-medium bg-indigo-600 text-white hover:bg-indigo-700 transition duration-300" data-tab="daily">Daily</button>
                <button class="report-tab w-full md:w-auto px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300" data-tab="weekly">Weekly</button>
                <button class="report-tab w-full md:w-auto px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300" data-tab="yearly">Yearly</button>
                <button class="report-tab w-full md:w-auto px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300" data-tab="custom">Custom</button>
            </div>
            <div id="customDateRange" class="hidden mt-4">
                <div class="flex flex-col md:flex-row md:items-center md:space-x-4 space-y-4 md:space-y-0">
                    <input type="text" id="startDate" placeholder="Start Date" class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                    <input type="text" id="endDate" placeholder="End Date" class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                    <button id="applyDateRange" class="w-full md:w-auto px-6 py-2 bg-indigo-600 text-white text-sm font-medium rounded-lg hover:bg-indigo-700 transition duration-300">Apply</button>
                </div>
            </div>
        </div>
        
       
            
            <div class="bg-white rounded-xl shadow-lg overflow-hidden animate-fade-in">
                <div class="overflow-x-auto">
                    <table class="w-full">
                        <thead>
                            <tr class="bg-indigo-100 text-indigo-800 uppercase text-xs md:text-sm leading-normal">
                                <th class="py-3 px-4 md:px-6 text-left">User</th>
                                <th class="py-3 px-4 md:px-6 text-center">Date</th>
                                <th class="py-3 px-4 md:px-6 text-center">Payment Method</th>
                                <th class="py-3 px-4 md:px-6 text-center">Number of Items</th>
                                <th class="py-3 px-4 md:px-6 text-right">Coupon offer</th>
                                <th class="py-3 px-4 md:px-6 text-right"> Discount</th>
                                <th class="py-3 px-4 md:px-6 text-right"> Total Amount</th>
                             
                            </tr>
                        </thead>
                        <tbody class="text-gray-600 text-sm font-light">
                            <% if (getsalesReport.length > 0) { %>
                                <% getsalesReport.forEach((sale) => { %>
                                    <tr class="border-b border-gray-200 hover:bg-indigo-50 transition duration-300">
                                        <td class="py-3 px-4 md:px-6 text-left whitespace-nowrap">
                                            <span class="font-medium"><%= sale.userId.name %></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-center">
                                            <span><%= sale.invoiceDate %></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-center">
                                            <span><%= sale.paymentMethod %></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-center">
                                            <span><%= sale.orderedItems.length%></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-center">
                                            <span><%= sale.couponOffer%></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-center">
                                            <span><%= sale.discount%></span>
                                        </td>
                                        <td class="py-3 px-4 md:px-6 text-right">
                                            <span class="font-bold">₹<%= sale.finalAmount %></span>
                                        </td>
                                    </tr>
                                <% }); %>
                            <% } else { %>
                                <tr>
                                    <td colspan="5" class="py-3 px-4 md:px-6 text-center text-gray-500">
                                        No sales data available for this period.
                                    </td>
                                </tr>
                            <% } %>
                            <tr class="bg-indigo-50">
                                <td colspan="4" class="py-3 px-4 md:px-6 text-left font-medium">Total</td>
                                <td class="py-3 px-4 md:px-6 text-right font-bold" id="totalSales">₹<%=totalSales%></td>
                            </tr>
                            <tr class="bg-indigo-50">
                                <td colspan="4" class="py-3 px-4 md:px-6 text-left font-medium">Total Discount</td>
                                <td class="py-3 px-4 md:px-6 text-right font-bold" id="totalDiscounts" >₹<%=totalDiscounts%></td>
                            </tr>
                        </tbody>
                    </table>
                </div>
            </div>
        </div>

        <!-- Pagination -->
        <!-- <div class="flex items-center justify-center mt-4">
            <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                <a href="#" class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Previous</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z" clip-rule="evenodd" />
                    </svg>
                </a>
                <a href="#" aria-current="page" class="relative z-10 inline-flex items-center bg-indigo-600 px-4 py-2 text-sm font-semibold text-white focus:z-20 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600">1</a>
                <a href="#" class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">2</a>
                <a href="#" class="relative hidden items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0 md:inline-flex">3</a>
                <span class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300 focus:outline-offset-0">...</span>
                <a href="#" class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 focus:z-20 focus:outline-offset-0">
                    <span class="sr-only">Next</span>
                    <svg class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                        <path fill-rule="evenodd" d="M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z" clip-rule="evenodd" />
                    </svg>
                </a>
            </nav>
        </div> -->
        
        <!-- Download Buttons -->
        <div class="flex justify-center md:justify-end gap-4 mt-6 " style="display: flex;justify-content: center;align-items: center;margin-top:5px;">
            <button id="downloadPDF" class="inline-flex items-center px-4 py-2 bg-emerald-500 hover:bg-emerald-600 text-white text-sm font-medium rounded-md transition duration-300 animate-scale">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                </svg>
                Download as PDF
            </button>
            <button  id="downloadExcel"  class="inline-flex items-center px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white text-sm font-medium rounded-md transition duration-300 animate-scale">
                <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16v1a3 3 0 003 3h10a3 3 0 003-3v-1m-4-4l-4 4m0 0l-4-4m4 4V4"/>
                </svg>
                Download as Excel
            </button>
        </div>
       
        <canvas id="salesChart" width="" height=""></canvas>   
    </div>
    
    <script>
        
        // Tab switching functionality
        const tabs = document.querySelectorAll('.report-tab');
        const customDateRange = document.getElementById('customDateRange');
        const salesTableBody = document.querySelector('tbody')
        const totalSalesElement = document.querySelector('#totalSales')
        const totalDiscountsElement = document.querySelector('#totalDiscounts');


        let currentFilter = "daily"; // Default filter is "daily"
        let startDate = "";
        let endDate = "";

        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                tabs.forEach(t => {
                    t.classList.remove('active', 'bg-indigo-600', 'text-white');
                    t.classList.add('bg-white', 'text-indigo-600');
                });
                tab.classList.remove('bg-white', 'text-indigo-600');
                tab.classList.add('active', 'bg-indigo-600', 'text-white');
                const filter = tab.getAttribute('data-tab');
                currentFilter = filter;
                customDateRange.style.display = filter === 'custom' ? 'block' : 'none';


                if (filter !== 'custom') {
                      fetchSalesReport(filter); // Fetch filtered data
                  }


            });
        });

        // Initialize Flatpickr for date inputs
        flatpickr("#startDate", {
            dateFormat: "Y-m-d",
        });
        flatpickr("#endDate", {
            dateFormat: "Y-m-d",
        });

        // Apply custom date range
        document.getElementById('applyDateRange').addEventListener('click', () => {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            if (startDate && endDate) {
                console.log(`Fetching data for date range: ${startDate} to ${endDate}`);
                // Here you would typically fetch and update the table data based on the selected date range

                fetchSalesReport('custom',startDate,endDate); // Fetch data with custom date range

            } else {
                alert('Please select both start and end dates.');
            }
        });

        let salesChart; // Declare a global variable for the chart instance

        // Function to fetch sales data based on the selected filter
        function fetchSalesReport(filter, startDate = "", endDate = "") {
        // console.log("selected tab:",tabType)
        axios.get('/admin/sales-filter', {
            params: {
                filter,
                startDate,
                endDate,
            }
        })
        .then(response => {
            // Update the report view here (e.g., render new data into the DOM)

            const {salesReport,totalSales,totalDiscounts } = response.data
            
            // Process the data and update the page with the new report
            console.log('responnse from sales backend:',response.data);

            let tableRows = '';
if (salesReport.length > 0) {
    salesReport.forEach(sale => {
        tableRows += `
            <tr class="border-b border-gray-200 hover:bg-indigo-50 transition duration-300">
                <td class="py-3 px-4 md:px-6 text-left whitespace-nowrap"><span class="font-medium">${sale.userId.name}</span></td>
                <td class="py-3 px-4 md:px-6 text-center"><span>${sale.invoiceDate}</span></td>
                <td class="py-3 px-4 md:px-6 text-center"><span>${sale.paymentMethod}</span></td>
                <td class="py-3 px-4 md:px-6 text-center"><span>${sale.orderedItems.length}</span></td>
                <td class="py-3 px-4 md:px-6 text-center"><span>${sale.couponOffer}</span></td>
                <td class="py-3 px-4 md:px-6 text-center"><span>${sale.discount}</span></td>
                <td class="py-3 px-4 md:px-6 text-right"><span class="font-bold">₹${sale.finalAmount}</span></td>
            </tr>`;
    });

    // Append total rows after sales rows
    tableRows += `
        <tr class="bg-indigo-50">
            <td colspan="6" class="py-3 px-4 md:px-6 text-right font-medium">Total Sales:</td>
            <td class="py-3 px-4 md:px-6 text-right font-bold">₹${totalSales}</td>
        </tr>
        <tr class="bg-indigo-50">
            <td colspan="6" class="py-3 px-4 md:px-6 text-right font-medium">Total Discount:</td>
            <td class="py-3 px-4 md:px-6 text-right font-bold">₹${totalDiscounts}</td>
        </tr>`;
} else {
    tableRows = `
        <tr>
            <td colspan="7" class="py-3 px-4 md:px-6 text-center text-gray-500">No sales data available for this period.</td>
        </tr>`;
}
           
            
            salesTableBody.innerHTML = tableRows;
            console.log(totalSales,totalDiscounts)

            if (isNaN(totalSales) || isNaN(totalDiscounts)) {
            console.error("Invalid data for chart:", { totalSales, totalDiscounts });
              return;
             }



            updateChart(totalSales, totalDiscounts);


           

        })
        .catch(error => {
            console.error('Error fetching sales report:', error);
        });
    }

    // Initial call to fetch the report with default filter (daily)
    fetchSalesReport(currentFilter);
    // Function to initialize or update the chart
    function updateChart(totalSales, totalDiscounts,) {
    const ctx = document.getElementById('salesChart').getContext('2d');

if (!ctx) {
    console.error("Canvas element or rendering context not found.");
    return;
}

    
    if (salesChart) {
        // If the chart already exists, update its data
        salesChart.data.datasets[0].data = [totalSales, totalDiscounts,];
        salesChart.update();
    } else {
        // Create a new chart if it doesn't exist
        salesChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Total Sales', 'Total Discounts', ''],
                datasets: [{
                    label: 'Sales Data',
                    data: [totalSales, totalDiscounts,],
                    backgroundColor: ['#4CAF50', '#FF9800', '#03A9F4'],
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        display: true,
                    },
                },
            },
        });
    }
}



// PDF Download
document.getElementById('downloadPDF').addEventListener('click', () => {
    const filter = currentFilter;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    
    window.location.href = `/admin/sales-filter-pdf?filter=${filter}&startDate=${startDate}&endDate=${endDate}`;
});

// Excel Download
document.getElementById('downloadExcel').addEventListener('click', () => {
    const filter = currentFilter;
    const startDate = document.getElementById('startDate').value;
    const endDate = document.getElementById('endDate').value;
    
    window.location.href = `/admin/sales-filter-excel?filter=${filter}&startDate=${startDate}&endDate=${endDate}`;
});
    </script>

<%- include("../../views/partials/admin/footer") %>

