<%- include("../../views/partials/admin/header") %>

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin - Sales Report</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">
    <script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">

    <style>
        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f0f4f8;
        }
        .animate-fade-in {
            animation: fadeIn 0.5s ease-in-out;
        }
        @keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }
        .animate-scale {
            transition: transform 0.3s ease-in-out;
        }
        .animate-scale:hover {
            transform: scale(1.05);
        }
        #salesChart {
            display: block;
            width: 100%;
            max-width: 800px;
            height: auto;
            margin: 0 auto;
        }
        .report-tab {
            transition: all 0.3s ease;
        }
        .report-tab:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }
        .chart-container {
            position: relative;
            margin: auto;
            height: 400px;
            width: 100%;
            max-width: 800px;
        }
        .stat-card {
            background: linear-gradient(135deg, #000000 0%, #1e4ad7 100%);
            transition: all 0.3s ease;
        }
        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
        .best-selling-card {
            background: linear-gradient(1712deg, #1c1b37 0%, #ffffff94 100%);
            transition: all 0.3s ease;
        }
        .best-selling-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
        }
    </style>
</head>

<body class="bg-gray-100">
    <div class="container mx-auto px-4 py-8">
        <h1 class="text-4xl font-bold text-gray-800 mb-8 text-center">Sales Dashboard</h1>
        
        <!-- Stat Cards -->
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-8">
            <div class="stat-card rounded-xl shadow-lg p-6 text-white animate-fade-in">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold mb-2">Total Users</h3>
                    <i class="fas fa-users text-3xl"></i>
                </div>
                <p class="text-3xl font-bold" id="totalUsers"><%=totalUsers%></p>
            </div>
            <div class="stat-card rounded-xl shadow-lg p-6 text-white animate-fade-in">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold mb-2">Total Sales</h3>
                    <i class="fas fa-chart-line text-3xl"></i>
                </div>
                <p class="text-3xl font-bold" id="totalSalesCard"><%=totalSales%></p>
            </div>
            <div class="stat-card rounded-xl shadow-lg p-6 text-white animate-fade-in">
                <div class="flex items-center justify-between">
                    <h3 class="text-lg font-semibold mb-2">Total Discounts</h3>
                    <i class="fas fa-tags text-3xl"></i>
                </div>
                <p class="text-3xl font-bold" id="totalDiscountsCard"><%=totalDiscounts%></p>
            </div>
        </div>

        <div class="flex flex-wrap justify-center gap-4 mb-8">
            <button class="report-tab active px-6 py-2 rounded-full text-sm font-medium bg-indigo-600 text-white hover:bg-indigo-700 transition duration-300 shadow-md" data-tab="daily">Daily</button>
            <button class="report-tab px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300 shadow-md" data-tab="weekly">Weekly</button>
            <button class="report-tab px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300 shadow-md" data-tab="yearly">Yearly</button>
            <button class="report-tab px-6 py-2 rounded-full text-sm font-medium bg-white text-indigo-600 hover:bg-indigo-50 transition duration-300 shadow-md" data-tab="custom">Custom</button>
        </div>

        <div id="customDateRange" class="hidden mb-8">
            <div class="flex flex-col md:flex-row justify-center items-center gap-4">
                <input type="text" id="startDate" placeholder="Start Date" class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                <input type="text" id="endDate" placeholder="End Date" class="w-full md:w-1/3 px-4 py-2 rounded-lg border border-indigo-300 focus:outline-none focus:ring-2 focus:ring-indigo-500 transition duration-300">
                <button id="applyDateRange" class="w-full md:w-auto px-6 py-2 bg-indigo-600 text-white text-sm font-medium rounded-lg hover:bg-indigo-700 transition duration-300">Apply</button>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-lg p-6 mb-8 animate-fade-in">
            <div class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>
        </div>

        <!-- Best Selling Products and Categories -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-8">
            <div class="best-selling-card rounded-xl shadow-lg p-6 text-gray-800 animate-fade-in">
                <h3 class="text-xl font-semibold mb-4">Top 10 Best Selling Products</h3>
                <%topProducts.forEach(product =>{%>
                    
                <ul id="bestSellingProducts" class="space-y-2">
                    <span><i style='font-size:24px' class='fas'>&#xf101; </i></span> <%= product.productDetails.productName %>  <br>
                     Quantity Sold :-<%= product.totalQuantity %> <br>
                     <span>-------------------</span>
                     
                    
                    <!-- This will be populated dynamically -->
                </ul>
            
                <% }) %>
            </div>
            <div class="best-selling-card rounded-xl shadow-lg p-6 text-gray-800 animate-fade-in">
                <h3 class="text-xl font-semibold mb-4">Top 3 Best Selling Categories</h3>
                <%topCategories.forEach(category =>{%>
                    
                    <ul id="bestSellingProducts" class="space-y-2">
                        <span><i style='font-size:24px' class='fas'>&#xf101; </i></span> <%= category.categoryDetails.name  %>  <br>
                         Quantity Sold :-<%= category.totalQuantity %> <br>
                         <span>-------------------</span>
                         
                        
                        <!-- This will be populated dynamically -->
                    </ul>
                
                    <% }) %>
            </div>
        </div>

        <div class="bg-white rounded-xl shadow-lg overflow-hidden animate-fade-in mb-8" style="display: none;">
            <div class="overflow-x-auto">
                <table class="w-full">
                    <thead>
                        <tr class="bg-indigo-100 text-indigo-800 uppercase text-xs md:text-sm leading-normal">
                            <th class="py-3 px-4 md:px-6 text-left">User</th>
                            <th class="py-3 px-4 md:px-6 text-center">Date</th>
                            <th class="py-3 px-4 md:px-6 text-center">Payment Method</th>
                            <th class="py-3 px-4 md:px-6 text-center">Products</th>
                            <th class="py-3 px-4 md:px-6 text-right">Amount</th>
                        </tr>
                    </thead>
                    <tbody class="text-gray-600 text-sm font-light" style="display: none;">
                        <!-- Table content will be dynamically populated here -->
                    </tbody>
                </table>
            </div>
        </div>

        <div class="flex justify-center gap-4 mt-6">
            <button id="downloadPDF" class="inline-flex items-center px-4 py-2 bg-emerald-500 hover:bg-emerald-600 text-white text-sm font-medium rounded-md transition duration-300 animate-scale shadow-md">
                <i class="fas fa-file-pdf mr-2"></i>
                Download as PDF
            </button>
            <button id="downloadExcel" class="inline-flex items-center px-4 py-2 bg-blue-500 hover:bg-blue-600 text-white text-sm font-medium rounded-md transition duration-300 animate-scale shadow-md">
                <i class="fas fa-file-excel mr-2"></i>
                Download as Excel
            </button>
        </div>
    </div>

    <script>
        // Tab switching functionality
        const tabs = document.querySelectorAll('.report-tab');
        const customDateRange = document.getElementById('customDateRange');
        const salesTableBody = document.querySelector('tbody');
        const totalUsersElement = document.getElementById('totalUsers');
        const totalSalesCardElement = document.getElementById('totalSalesCard');
        const totalDiscountsCardElement = document.getElementById('totalDiscountsCard');
        const bestSellingProductsElement = document.getElementById('bestSellingProducts');
        const bestSellingCategoriesElement = document.getElementById('bestSellingCategories');

        let currentFilter = "daily";
        let startDate = "";
        let endDate = "";

        tabs.forEach(tab => {
            tab.addEventListener('click', () => {
                tabs.forEach(t => {
                    t.classList.remove('active', 'bg-indigo-600', 'text-white');
                    t.classList.add('bg-white', 'text-indigo-600');
                });
                tab.classList.remove('bg-white', 'text-indigo-600');
                tab.classList.add('active', 'bg-indigo-600', 'text-white');
                const filter = tab.getAttribute('data-tab');
                currentFilter = filter;
                customDateRange.style.display = filter === 'custom' ? 'block' : 'none';

                if (filter !== 'custom') {
                    fetchSalesReport(filter);
                }
            });
        });

        // Initialize Flatpickr for date inputs
        flatpickr("#startDate", {
            dateFormat: "Y-m-d",
        });
        flatpickr("#endDate", {
            dateFormat: "Y-m-d",
        });

        // Apply custom date range
        document.getElementById('applyDateRange').addEventListener('click', () => {
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            if (startDate && endDate) {
                fetchSalesReport('custom', startDate, endDate);
            } else {
                alert('Please select both start and end dates.');
            }
        });

        let salesChart;

        function fetchSalesReport(filter, startDate = "", endDate = "") {
            axios.get('/admin/dashboard-filter', {
                params: { filter, startDate, endDate }
            })
            .then(response => {
                const { salesReport, totalSales, totalDiscounts, totalUsers, bestSellingProducts, bestSellingCategories } = response.data;
                updateTable(salesReport, totalSales, totalDiscounts);
                updateChart(totalSales, totalDiscounts);
                updateStatCards(totalUsers, totalSales, totalDiscounts);
                updateBestSelling(bestSellingProducts, bestSellingCategories);
            })
            .catch(error => {
                console.error('Error fetching sales report:', error);
            });
        }

        function updateTable(salesReport, totalSales, totalDiscounts) {
            let tableRows = '';
            if (salesReport.length > 0) {
                salesReport.forEach(sale => {
                    tableRows += `
                        <tr class="border-b border-gray-200 hover:bg-indigo-50 transition duration-300">
                            <td class="py-3 px-4 md:px-6 text-left whitespace-nowrap"><span class="font-medium">${sale.userId.name}</span></td>
                            <td class="py-3 px-4 md:px-6 text-center"><span>${sale.invoiceDate}</span></td>
                            <td class="py-3 px-4 md:px-6 text-center"><span>${sale.paymentMethod}</span></td>
                            <td class="py-3 px-4 md:px-6 text-center"><span>${sale.orderedItems.length}</span></td>
                            <td class="py-3 px-4 md:px-6 text-right"><span class="font-bold">₹${sale.finalAmount}</span></td>
                        </tr>`;
                });
            } else {
                tableRows = `
                    <tr>
                        <td colspan="5" class="py-3 px-4 md:px-6 text-center text-gray-500">No sales data available for this period.</td>
                    </tr>`;
            }
            tableRows += `
                <tr class="bg-indigo-50">
                    <td colspan="4" class="py-3 px-4 md:px-6 text-left font-medium">Total</td>
                    <td class="py-3 px-4 md:px-6 text-right font-bold">₹${totalSales}</td>
                </tr>
                <tr class="bg-indigo-50">
                    <td colspan="4" class="py-3 px-4 md:px-6 text-left font-medium">Total Discount</td>
                    <td class="py-3 px-4 md:px-6 text-right font-bold">₹${totalDiscounts}</td>
                </tr>`;
            salesTableBody.innerHTML = tableRows;
        }

        function updateChart(totalSales, totalDiscounts) {
            const ctx = document.getElementById('salesChart').getContext('2d');
            
            if (salesChart) {
                salesChart.data.datasets[0].data = [totalSales, totalDiscounts];
                salesChart.update();
            } else {
                salesChart = new Chart(ctx, {
                    type: 'bar',
                    data: {
                        labels: ['Total Sales', 'Total Discounts'],
                        datasets: [{
                            label: 'Sales Data',
                            data: [totalSales, totalDiscounts],
                            backgroundColor: ['rgba(75, 192, 192, 0.6)', 'rgba(255, 159, 64, 0.6)'],
                            borderColor: ['rgb(75, 192, 192)', 'rgb(255, 159, 64)'],
                            borderWidth: 1
                        }]
                    },
                    options: {
                        responsive: true,
                        maintainAspectRatio: false,
                        scales: {
                            y: {
                                beginAtZero: true,
                                ticks: {
                                    callback: function(value, index, values) {
                                        return '₹' + value.toLocaleString();
                                    }
                                }
                            }
                        },
                        plugins: {
                            legend: {
                                display: true,
                                position: 'top',
                            },
                            tooltip: {
                                callbacks: {
                                    label: function(context) {
                                        let label = context.dataset.label || '';
                                        if (label) {
                                            label += ': ';
                                        }
                                        if (context.parsed.y !== null) {
                                            label += '₹' + context.parsed.y.toLocaleString();
                                        }
                                        return label;
                                    }
                                }
                            }
                        },
                        animation: {
                            duration: 1000,
                            easing: 'easeOutQuart'
                        }
                    }
                });
            }
        }

        function updateStatCards(totalUsers, totalSales, totalDiscounts) {
            totalUsersElement.textContent = totalUsers.toLocaleString();
            totalSalesCardElement.textContent = '₹' + totalSales.toLocaleString();
            totalDiscountsCardElement.textContent = '₹' + totalDiscounts.toLocaleString();
        }

        function updateBestSelling(products, categories) {
            bestSellingProductsElement.innerHTML = products.map(product => 
                `<li class="flex justify-between items-center">
                    <span>${product.name}</span>
                    <span class="font-semibold">₹${product.sales.toLocaleString()}</span>
                </li>`
            ).join('');

            bestSellingCategoriesElement.innerHTML = categories.map(category => 
                `<li class="flex justify-between items-center">
                    <span>${category.name}</span>
                    <span class="font-semibold">₹${category.sales.toLocaleString()}</span>
                </li>`
            ).join('');
        }

        // Initial call to fetch the report with default filter (daily)
        fetchSalesReport(currentFilter);

        // PDF Download
        document.getElementById('downloadPDF').addEventListener('click', () => {
            const filter = currentFilter;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            window.location.href = `/admin/sales-filter-pdf?filter=${filter}&startDate=${startDate}&endDate=${endDate}`;
        });

        // Excel Download
        document.getElementById('downloadExcel').addEventListener('click', () => {
            const filter = currentFilter;
            const startDate = document.getElementById('startDate').value;
            const endDate = document.getElementById('endDate').value;
            window.location.href = `/admin/sales-filter-excel?filter=${filter}&startDate=${startDate}&endDate=${endDate}`;
        });
    </script>
</body>

<%- include("../../views/partials/admin/footer") %>